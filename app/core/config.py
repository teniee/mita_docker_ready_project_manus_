from functools import lru_cache
from pydantic_settings import BaseSettings


class Settings(BaseSettings):
    # Database
    DATABASE_URL: str = "postgresql+asyncpg://postgres:postgres@db:5432/mita"

    # Redis
    REDIS_URL: str = "redis://redis:6379"

    # Auth / JWT
    JWT_SECRET: str
    SECRET_KEY: str = "default_dev_secret"
    ALGORITHM: str = "HS256"
    ACCESS_TOKEN_EXPIRE_MINUTES: int = 30

    # OpenAI
    openai_api_key: str
    openai_model: str = "gpt-4o-mini"

    # Firebase
    google_application_credentials: str = ""

    # App Store (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –Ω—É–∂–Ω–æ —á—Ç–æ–±—ã –Ω–µ –ø–∞–¥–∞–ª–æ)
    appstore_shared_secret: str = ""

    # Sentry (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    sentry_dsn: str = ""

    class Config:
        # üîª –£–¥–∞–ª–µ–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ Render –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ UI
        # env_file = "./secrets/.env.production"
        pass


@lru_cache
def get_settings():
    return Settings()


settings = get_settings()

# –î–ª—è —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞
SECRET_KEY = settings.SECRET_KEY
ALGORITHM = settings.ALGORITHM
