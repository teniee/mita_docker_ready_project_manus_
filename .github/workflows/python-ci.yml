name: Python CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start Postgres
        run: |
          docker run -d --name pg -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=mita -p 5432:5432 postgres:15
          for i in {1..10}; do
            docker exec pg pg_isready && break
            sleep 2
          done

      - name: Migration smoke test
        env:
          DATABASE_URL: postgresql+psycopg2://postgres:postgres@localhost:5432/mita
        run: alembic upgrade head

      - name: Lint & style
        run: |
          black --check .
          isort --check .
          ruff .

      - name: Fail on Cyrillic characters
        run: |
          if grep -rIn --exclude-dir=.git --exclude-dir=docs/legacy -P "[\p{Cyrillic}]" .; then
            echo "Cyrillic characters detected"
            exit 1
          fi

      - name: Tests with coverage
        run: |
          export PYTHONPATH=.
          pytest --cov=app --cov-report=xml --cov-report=term --cov-fail-under=65

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: coverage.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}/mita-backend:latest
